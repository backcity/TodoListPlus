// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TodoListPlus.Infrastructure;

#nullable disable

namespace TodoListPlus.Infrastructure.Migrations
{
    [DbContext(typeof(TodoListPlusDbContext))]
    partial class TodoListPlusDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("todolisttask")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("taskseq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("tasktagseq")
                .IncrementsBy(10);

            modelBuilder.Entity("TodoListPlus.Domain.AggregatesModel.TaskTagAggregate.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "tasktagseq");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tags", "todolisttask");
                });

            modelBuilder.Entity("TodoListPlus.Domain.AggregatesModel.TodoTaskAggregate.TaskTag", b =>
                {
                    b.Property<int>("TodoTaskId")
                        .HasColumnType("integer");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int?>("TodoTaskId1")
                        .HasColumnType("integer");

                    b.HasKey("TodoTaskId", "TagId");

                    b.HasIndex("TagId");

                    b.HasIndex("TodoTaskId1");

                    b.ToTable("tasktags", "todolisttask");
                });

            modelBuilder.Entity("TodoListPlus.Domain.AggregatesModel.TodoTaskAggregate.TodoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "taskseq");

                    b.Property<string>("IdentityId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("SubTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TaskContent")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("TodoTaskStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("todotasks", "todolisttask");
                });

            modelBuilder.Entity("TodoListPlus.Domain.AggregatesModel.TaskTagAggregate.Tag", b =>
                {
                    b.OwnsOne("TodoListPlus.Domain.AggregatesModel.TaskTagAggregate.TagColor", "TagColor", b1 =>
                        {
                            b1.Property<int>("TagId")
                                .HasColumnType("integer");

                            b1.Property<string>("Value")
                                .HasColumnType("text");

                            b1.HasKey("TagId");

                            b1.ToTable("tags", "todolisttask");

                            b1.WithOwner()
                                .HasForeignKey("TagId");
                        });

                    b.Navigation("TagColor");
                });

            modelBuilder.Entity("TodoListPlus.Domain.AggregatesModel.TodoTaskAggregate.TaskTag", b =>
                {
                    b.HasOne("TodoListPlus.Domain.AggregatesModel.TaskTagAggregate.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TodoListPlus.Domain.AggregatesModel.TodoTaskAggregate.TodoTask", null)
                        .WithMany("TaskTags")
                        .HasForeignKey("TodoTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoListPlus.Domain.AggregatesModel.TodoTaskAggregate.TodoTask", "TodoTask")
                        .WithMany()
                        .HasForeignKey("TodoTaskId1");

                    b.Navigation("Tag");

                    b.Navigation("TodoTask");
                });

            modelBuilder.Entity("TodoListPlus.Domain.AggregatesModel.TodoTaskAggregate.TodoTask", b =>
                {
                    b.Navigation("TaskTags");
                });
#pragma warning restore 612, 618
        }
    }
}
